<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>从零开始的Android Recovery编译</title>
    <url>/2023/01/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84Android-Recovery%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<h1 id="从零开始的Android-Recovery-编译"><a href="#从零开始的Android-Recovery-编译" class="headerlink" title="从零开始的Android Recovery 编译"></a>从零开始的Android Recovery 编译</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h2><p>很多老哥想在自己刷机时使用更好看的Rec，然而自己不会编译，亦或是自己用的手机没有Rec，想自己动手编译一个来愉快的刷机，本篇教程可以带你快速入门！</p>
<hr>
<h2 id="一-要求"><a href="#一-要求" class="headerlink" title="一.要求"></a>一.要求</h2><ul>
<li>1.一双手</li>
<li>2.一个会用搜索引擎的大脑</li>
<li>3.一台电脑</li>
<li>4.硬盘剩余50GB至少</li>
<li>5.一个Linux操作环境，推荐实体机双系统安装Ubuntu20.04，当然你也可以使用虚拟机，<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10">WSL2</a>等来安装Ubuntu</li>
</ul>
<hr>
<h2 id="二-前期准备工作"><a href="#二-前期准备工作" class="headerlink" title="二.前期准备工作"></a>二.前期准备工作</h2><p>本人在这里使用WSL2进行编译</p>
<p>系统版本：<strong>Windows 11 21H2 22000.71</strong></p>
<p>WSL版本：<strong>Ubuntu20.04(WSL2)</strong></p>
<p><img src="https://s2.loli.net/2023/01/12/OeNtnyhdB1HD8Sq.png" alt="IMG_3486.PNG"></p>
<p>我们进入<a href="https://github.com/">GitHub</a>，找到TWRP的<a href="https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni">源码</a></p>
<p>这里我们选择 <em>twrp-10.0</em> 的分支进行编译</p>
<p><img src="https://s2.loli.net/2023/01/12/bpPEBTCRMVGzKf1.png" alt="IMG_3487.PNG"></p>
<p>首先 <em>打开终端</em></p>
<p><img src="https://s2.loli.net/2023/01/12/67qZnhpIoVTcKQj.png" alt="IMG_3488.PNG"></p>
<p><em>安装编译需要用的依赖</em></p>
<p><code>sudo apt update</code></p>
<p><code>sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev git</code></p>
<p><em>安装repo,这是Google开发的用于管理Android版本库的一个工具</em></p>
<p><code>mkdir -p ~/bin</code></p>
<p><code>curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo &gt; ~/bin/repo</code></p>
<p><code>sudo cp ~/bin/repo /bin/repo</code></p>
<p><code>sudo chmod a+x /bin/repo</code></p>
<p><code>export REPO_URL=&#39;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo&#39;</code></p>
<p><del>设置Github代理，以解决国内拉源码慢或无法拉取的问题</del></p>
<p><del>[git config –global url.<a href="https://mirrors.bfsu.edu.cn/git/AOSP/.insteadof">https://mirrors.bfsu.edu.cn/git/AOSP/.insteadof</a> <a href="https://android.googlesource.com]">https://android.googlesource.com]</a></del></p>
<p><del>[git config –global url.<a href="https://hub.fastgit.org/.insteadof">https://hub.fastgit.org/.insteadof</a> <a href="https://github.com]">https://github.com]</a></del></p>
<p>Fastgit代理站炸掉了，请不要使用代理站</p>
<p><code>mkdir twrp</code></p>
<p><code>cd twrp</code></p>
<p><code>repo init --depth=1 -u git://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git -b twrp-10.0</code></p>
<p><em><strong>注：</strong></em></p>
<ul>
<li><p>1.这里的–depth&#x3D;1参数是只拉取一层提交，可以减少拉下来的源码大小</p>
</li>
<li><p>2.这里的twrp-10.0是要拉取的分支，您可以根据自己的需求在twrp项目地址中找到需要的版本并替换命令中的twrp-10.0</p>
</li>
</ul>
<p><img src="https://s2.loli.net/2023/01/12/7PE4BaAsvSTOkIU.png" alt="IMG_3489.PNG"></p>
<p>出现如图的<code>repo has been initialized in xxxxxxx</code>就成功了</p>
<p>接下来我们开始 <em>同步源码</em></p>
<p><code>repo sync</code></p>
<p>出现如图的提示我们就拉取完毕源码啦</p>
<p><img src="https://s2.loli.net/2023/01/12/kcVLgTKzCOnFewh.png" alt="IMG_3490.PNG"></p>
<hr>
<h2 id="三-编译准备工作"><a href="#三-编译准备工作" class="headerlink" title="三.编译准备工作"></a>三.编译准备工作</h2><p>接下来就要开始编译了</p>
<p><em><strong>准备工作：</strong></em></p>
<ul>
<li>准备好自己设备的 <em>DeviceTree</em> (下文称 <em>dt</em>)</li>
</ul>
<hr>
<p>dt的获取有两个渠道:</p>
<h3 id="1-Github上搜索-手机代号-twrp"><a href="#1-Github上搜索-手机代号-twrp" class="headerlink" title="1.Github上搜索 手机代号+twrp"></a>1.Github上搜索 手机代号+twrp</h3><p>这是一个小例子：</p>
<p><img src="https://s2.loli.net/2023/01/12/vN9aAQ61GJOY7mE.png" alt="MX6D6NT2_T~D~9_Z_6WPHE0.png"></p>
<p><code>cepheus twrp</code></p>
<p><code>cd ~/twrp</code></p>
<p><code>git clone https://github.com/mauronofrio/android_device_xiaomi_cepheus device/xiaomi/cepheus</code></p>
<p><strong>分析:</strong> </p>
<p><code>git clone 项目地址 克隆到目标路径</code></p>
<p>这时候有人肯定就要说了</p>
<p>我哪来的设备树?我这手机那么冷门？鬼都不知道有这手机</p>
<hr>
<h3 id="2-使用脚本生成dt"><a href="#2-使用脚本生成dt" class="headerlink" title="2.使用脚本生成dt"></a>2.使用脚本生成dt</h3><p>好在Github上有大佬给我们写了一键生成omni dt的工具</p>
<p><a href="https://github.com/SebaUbuntu/TWRP-device-tree-generator">项目地址</a></p>
<p>接下来我教你们使用它</p>
<p>需要的文件: </p>
<ul>
<li><p>设备的recovery&#x2F;boot.img</p>
</li>
<li><p>(手机是A-Only或Sar的提取recovery.img,A&#x2F;B分区的提取boot.img)</p>
</li>
</ul>
<p><code>sudo apt install cpio</code></p>
<p><code>pip3 install twrpdtgen</code></p>
<p><code>python3 -m twrpdtgen recovery/boot.img的绝对路径</code></p>
<p><img src="https://s2.loli.net/2023/01/12/WDuskZpF6Yf3iMI.png" alt="IMG_3491.PNG"></p>
<p>如图我把recovery镜像放在了&#x2F;root&#x2F;dtgen文件夹里</p>
<p>则我要运行</p>
<p>python3 -m twrpdtgen &#x2F;root&#x2F;dtgen&#x2F;recovery.img</p>
<p><img src="https://s2.loli.net/2023/01/12/YTpFeSfKD5GMt2i.png" alt="IMG_3492.PNG"></p>
<p>出现如图提示就大功告成了，在当前路径下就会出现生成好的dt</p>
<p>进入生成的output文件夹，我们可以看到一个名为厂商名的文件夹</p>
<p><img src="https://s2.loli.net/2023/01/12/dgPJrcXEa7VvIkU.png" alt="IMG_3493.PNG"></p>
<p>这里是meizu</p>
<p>我们复制这个文件夹到源码目录的device文件夹中，如果没有device文件夹则自行新建一个</p>
<p>进入源码目录&#x2F;device&#x2F;厂商名的文件夹里</p>
<p><img src="https://s2.loli.net/2023/01/12/xwsJWljezRrbKpQ.jpg" alt="IMG_3494_20230112-161104_.JPG"></p>
<p>里面还有一个文件夹，这是你的设备名，记住这个文件夹名，待会会用到(下称设备名)</p>
<h2 id="四-开始编译"><a href="#四-开始编译" class="headerlink" title="四.开始编译"></a>四.开始编译</h2><p>回到源码根目录</p>
<p><code>. build/envsetup.sh</code></p>
<p><code>lunch omni_设备名-eng</code></p>
<p>这是一个小例子:</p>
<p><code>lunch omni_meizu16sPro-eng</code></p>
<p><img src="https://s2.loli.net/2023/01/12/WRDxdHekt51F34w.png" alt="IMG_3495.PNG"></p>
<p>出现如图就是成功了</p>
<p><code>export ALLOW_MISSING_DEPENDENCIES=true</code></p>
<p><code>export LC_ALL=&quot;C&quot;</code></p>
<p><code>mka recoveryimage</code></p>
<p><img src="https://s2.loli.net/2023/01/12/NxZ9HJiPIRCM7yT.jpg" alt="IMG_3496_20230112-161109_.JPG"></p>
<p>至此，您就已经开始编译，此过程比较漫长，取决于您电脑的配置</p>
<hr>
<p><img src="https://s2.loli.net/2023/01/12/tIrGbnNVBe2pRqF.jpg" alt="IMG_3497_20230112-161112_.JPG"></p>
<p>当当当！出现这个提示意味着我们已经编译完成了</p>
<p>我们进入out&#x2F;target&#x2F;product&#x2F;设备名 这个文件夹</p>
<p>里面的recovery就是编译出的twrp！</p>
]]></content>
      <categories>
        <category>Android</category>
        <category>编译</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
